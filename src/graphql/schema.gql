# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  username: String!
  email: String!
  createdAt: Timestamp!
  updatedAt: Timestamp
}

"""
`Date` type as integer. Type represents date and time as number of milliseconds from start of UNIX epoch.
"""
scalar Timestamp

type LoginResponse {
  access_token: String!
  user: User!
}

type LogoutResponse {
  message: String!
}

type MeResponse {
  user: User
}

type RefreshAccessTokenResponse {
  access_token: String!
}

type SignUpResponse {
  user: User!
}

type TutorRequestConnection {
  tutorRequestId: String!
  tutorId: String!
  status: ConnectionStatus!
  type: TutorRequestConnectType!
}

enum ConnectionStatus {
  REQUESTED
  ACCEPTED
  DECLINED
}

enum TutorRequestConnectType {
  TUTOR_TO_TUTOR_REQUEST
  TUTOR_REQUEST_TO_TUTOR
}

type AcceptTutorRequestConnectionResponse {
  tutorRequestConnection: TutorRequestConnection
}

type CreateTutorRequestConnectResponse {
  tutorRequestConnection: TutorRequestConnection
}

type DeclineTutorRequestConnectinoResponse {
  tutorRequestConnection: TutorRequestConnection
}

type LearnerProfile {
  id: String!
  bio: String
  userId: String!
}

type CreateLeanerProfileResponse {
  leanerProfile: LearnerProfile
}

type UpdateLearnerProfileResponse {
  learnerProfile: LearnerProfile
}

type Notification {
  id: String!
  notificationType: NotificationType!
  notifier: User
  receiver: User!
  itemId: String
  title: String!
  content: String!
  isRead: Boolean!
  createdAt: Timestamp!
}

enum NotificationType {
  TUTOR_REQUEST
  TUTOR_ACCEPT
  TUTOR_DECLINE
  LEARNER_REQUEST
  LEARNER_ACCEPT
  LEARNER_DECLINE
}

type Subject {
  id: Int!
  name: String!
  description: String
}

type CreateSubjectResponse {
  subject: Subject
}

type TutorProfile {
  id: String!
  bio: String
  user: User!
  tutorRequestConnections: [TutorRequestConnection]
  tutorProfileSubject: [TutorProfileSubject]
}

type TutorProfileSubject {
  tutor: TutorProfile!
  subject: Subject!
}

type PageInfo {
  hasNextPage: Boolean!
  cursor: Cursor
  lastTake: Int!
  totalAmount: Int!
}

union Cursor = StringCursor | IntCursor

type StringCursor {
  value: String!
}

type IntCursor {
  value: Int!
}

type FindManyTutorProfilesResponse {
  nodes: [TutorProfile]
  pageInfo: PageInfo!
}

type TutorRequest {
  id: String!
  learner: LearnerProfile!
  subject: Subject!
  createdAt: Timestamp!
  connections: [TutorRequestConnection]
}

type CreateTutorRequestResponse {
  tutorRequest: TutorRequest
}

type FindTutorRequestResponse {
  nodes: [TutorRequest]
  pageInfo: PageInfo!
}

type Query {
  me: MeResponse!
  findManyTutorRequests(findManyTutorRequestsInput: FindManyTutorRequestsInput!): FindTutorRequestResponse!
  findManyTutorProfiles(findManyTutorProfilesInput: FindManyTutorProfilesInput!): FindManyTutorProfilesResponse!
}

input FindManyTutorRequestsInput {
  take: Int!
  stringCursor: String
  searchString: String!
}

input FindManyTutorProfilesInput {
  take: Int!
  stringCursor: String
  searchString: String!
}

type Mutation {
  login(loginInput: LoginInput!): LoginResponse!
  signUp(signUpInput: SignUpInput!): SignUpResponse!
  refreshAccessToken: RefreshAccessTokenResponse!
  logout: LogoutResponse!
  createLearnerProfile(createLearnerProfileInput: CreateLearnerProfileInput!): CreateLeanerProfileResponse!
  updateLearnerProfile(updateLearnerProfileInput: UpdateLearnerProfileInput!): UpdateLearnerProfileResponse!
  createTutorRequestConnection(createTutorRequestConnectInput: CreateTutorRequestConnectInput!): CreateTutorRequestConnectResponse!
  acceptTutorRequestConnection(tutorRequestConnectionWhereUniqueInput: TutorRequestConnectionWhereUniqueInput!): AcceptTutorRequestConnectionResponse!
  declineTutorRequestConnection(tutorRequestConnectionWhereUniqueInput: TutorRequestConnectionWhereUniqueInput!): DeclineTutorRequestConnectinoResponse!
  createTutorRequest(createTutorRequestInput: CreateTutorRequestInput!): CreateTutorRequestResponse!
  createSubject(createSubjectInput: CreateSubjectInput!): CreateSubjectResponse!
  createTutorProfile(createTutorProfileInput: CreateTutorProfileInput!): TutorProfile
  updateTutorProfile(updateTutorProfileInput: UpdateTutorProfileInput!): TutorProfile
}

input LoginInput {
  email: String!
  password: String!
}

input SignUpInput {
  username: String
  email: String
  password: String
}

input CreateLearnerProfileInput {
  bio: String!
}

input UpdateLearnerProfileInput {
  bio: String
}

input CreateTutorRequestConnectInput {
  tutorRequestId: String!
  tutorId: String!
  type: String!
}

input TutorRequestConnectionWhereUniqueInput {
  tutorRequestId: String!
  tutorId: String!
}

input CreateTutorRequestInput {
  learnerId: String!
  subjectId: Float!
  description: String
}

input CreateSubjectInput {
  name: String!
  description: String
}

input CreateTutorProfileInput {
  bio: String!
}

input UpdateTutorProfileInput {
  bio: String
}

type Subscription {
  notifications: Notification!
}